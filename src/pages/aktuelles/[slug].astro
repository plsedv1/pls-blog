---
/**
 * Detailseite: Einzelner WP-Post per Slug
 * - Prerendering via getStaticPaths()
 * - Beitragsbild via _embed (mit Fallback/https-Fix)
 * - Kategorien/Tags aus _embedded.wp:term
 */

import Layout from "../../layouts/Layout.astro";
import { WP_BASE } from "../../lib/wp.ts";
type WPPost = any;


// Alle Slugs holen (ggf. paginiert)
export async function getStaticPaths() {
  const perPage = 100;
  let page = 1;
  let totalPages = 1;
  const paths: Array<{ params: { slug: string } }> = [];

  do {
    const listUrl = `${WP_BASE}/wp-json/wp/v2/posts?per_page=${perPage}&page=${page}&_fields=slug`;
    const res = await fetch(listUrl);
    if (!res.ok) break;
    const data = await res.json();
    const tp = res.headers.get("X-WP-TotalPages");
    totalPages = tp ? Number(tp) : 1;

    for (const item of data) {
      if (item?.slug) paths.push({ params: { slug: item.slug } });
    }
    page++;
  } while (page <= totalPages);

  return paths;
}

// Einzelnen Post per Slug holen (inkl. _embed für Bild/Kategorien/Tags)
const slug = Astro.params.slug as string;
const postUrl = `${WP_BASE}/wp-json/wp/v2/posts?slug=${encodeURIComponent(slug)}&_embed`;
let post: WPPost | null = null;

try {
  const res = await fetch(postUrl);
  if (res.ok) {
    const arr = await res.json();
    post = Array.isArray(arr) ? arr[0] : null;
  }
} catch (e) {
  console.error("WP Fetch Fehler:", e);
}

if (!post) {
  throw new Error(`Post nicht gefunden: ${slug}`);
}

const title = post?.title?.rendered ?? "Ohne Titel";
const dateISO = post?.date ?? "";
const date = dateISO
  ? new Date(dateISO).toLocaleDateString("de-DE", { year: "numeric", month: "long", day: "2-digit" })
  : "";

// Bild-Helper
function getFeaturedImage(p: WPPost): { src: string; alt: string } {
  const media = p?._embedded?.["wp:featuredmedia"]?.[0];
  let src =
    media?.source_url ||
    media?.media_details?.sizes?.large?.source_url ||
    media?.media_details?.sizes?.medium_large?.source_url ||
    media?.media_details?.sizes?.full?.source_url ||
    media?.guid?.rendered ||
    "";
  const alt =
    media?.alt_text ||
    media?.title?.rendered ||
    p?.title?.rendered ||
    "Beitragsbild";

  if (!src) src = "/images/placeholder-21x9.jpg";
  if (src.startsWith("http://")) src = src.replace("http://", "https://");
  return { src, alt };
}

const { src: heroSrc, alt: heroAlt } = getFeaturedImage(post);

// Kategorien & Tags (Index 0 = Kategorien, 1 = Tags)
const terms = {
  categories: (post?._embedded?.["wp:term"]?.[0] || [])
    .map((t: any) => t?.name)
    .filter(Boolean),
  tags: (post?._embedded?.["wp:term"]?.[1] || [])
    .map((t: any) => t?.name)
    .filter(Boolean),
};
---

<Layout pageTitle={`Aktuelles – ${title}`}>
  <!-- Hero mit Beitragsbild -->
  <section class="relative isolate text-white bg-cover bg-center flex items-end min-h-[45svh]"
           style={`background-image:url('${heroSrc}');`}>
    <div class="absolute inset-0 bg-black/45"></div>
    <div class="relative z-10 mx-auto w-[75vw] py-10 md:py-16">
      <time datetime={dateISO} class="text-white/80 block mb-2">{date}</time>
      <h1 class="text-3xl md:text-5xl font-display font-bold tracking-wide" set:html={title}></h1>

      {terms.categories?.length ? (
        <div class="mt-4 flex flex-wrap gap-2">
          {terms.categories.map((c) => <span class="rounded bg-white/10 px-3 py-1 text-sm">{c}</span>)}
        </div>
      ) : null}

      <!-- Alternativtext für Screenreader -->
      <span class="sr-only">{heroAlt}</span>
    </div>
  </section>

  <!-- Content -->
  <section class="w-full py-12 md:py-16 bg-ink2 text-white">
    <div class="mx-auto w-[75vw] prose prose-invert max-w-none">
      <div set:html={post?.content?.rendered || ""}></div>
    </div>

    <div class="mx-auto w-[75vw] mt-12 flex flex-wrap gap-3">
      <a href="/aktuelles" class="inline-block rounded bg-white px-4 py-2 text-ink hover:bg-gray-100">← Zur Übersicht</a>
      <a href={post?.link || "#"} target="_blank" rel="noopener"
         class="inline-block rounded border border-white/30 px-4 py-2 hover:bg-white/10">
        Original auf blog.pls-edv.de öffnen
      </a>

      {terms.tags?.length ? (
        <div class="ml-auto flex items-center gap-2 text-sm text-white/80">
          <span>Tags:</span>
          <div class="flex flex-wrap gap-2">
            {terms.tags.map((t) => <span class="rounded bg-white/10 px-2 py-0.5">{t}</span>)}
          </div>
        </div>
      ) : null}
    </div>
  </section>
</Layout>
